---
title: "Land Classification of Southern Santa Barbara County"
author: "Rachel Swick"
date: last-modified
execute:
  warning: false
  message: false
format:
  html:
    toc: true
    code-fold: true
---

```{r}
library(sf) # vector data
library(terra) # raster data
library(here) # file path management
library(tidyverse)
library(rpart) # recursive partitioning and regression trees
library(rpart.plot) # plotting for rpart
library(tmap) # map making
```

```{r}
# list files for each band, including the full file path
filelist <- list.files(here::here("data", "landsat-data"), full.names = TRUE)

# read in and store as a raster stack
landsat <- rast(filelist)

# update layer names to match band
names(landsat) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")

# plot true color image
plotRGB(landsat, r = 3, g = 2, b = 1, stretch = "lin")
```

```{r}
# read in shapefile for portion of 
SB_county_south <- st_read(here::here("data", "SB_county_south.shp")) %>%
      st_transform(SB_county_south, crs = crs(landsat))

tm_shape(SB_county_south) +
  tm_borders()
```

```{r}
# Crop the Landsat scene to the extent of the study area
landsat_cropped <- crop(landsat, SB_county_south)

# Mask the raster to the study area
landsat_masked <- mask(landsat_cropped, SB_county_south)

rm(landsat, SB_county_south, landsat_cropped)

plotRGB(landsat_masked, r = 3, g = 2, b = 1, stretch = "lin")
```

## Convertin Landsat values into reflectance

```{r}
# reclassify erroneous values as NA
rcl <- matrix(c(-Inf, 7273, NA,
                43636, Inf, NA), ncol = 3, byrow = TRUE)

landsat <- classify(landsat_masked, rcl = rcl)

# Adjust factors based on scaling and additive factor
landsat <- (landsat * 0.0000275 - 0.2) * 100

summary(landsat)
```

## Training classifier

```{r}
# read in training data
training_data <- st_read(here::here("data", "trainingdata.shp")) %>% 
  st_transform(., crs = crs(landsat))
```

```{r}
training_data_values <- terra::extract(landsat, training_data, df = TRUE)

training_data_attributes <- training_data %>% 
  st_drop_geometry()

SB_training_data <- left_join(training_data_values, training_data_attributes,
          by = c("ID" = "id")) %>% 
  mutate(type = as.factor(type))
```

```{r}
# Establish model formula 
SB_formula <- type ~ red + green + blue + NIR + SWIR1 + SWIR2

# Train decision tree
SB_decision_tree <- rpart(formula = SB_formula,
                          data = SB_training_data,
                          method = "class",
                          na.action = na.omit)

prp(SB_decision_tree)
```

## Classify image

```{r}
# Classify image based on decision tree
SB_classification <- terra::predict(landsat, SB_decision_tree,
                                    type = 'class', na.rm = TRUE)

levels(SB_training_data$type)
levels(SB_classification)
```

```{r}
tm_shape(SB_classification) +
  tm_raster(palette = c("#8DB580", "#F2DDA4", "#7E8987", "#6A8EAE"),
labels = c("green vegetation", "soil/dead grass", "urban", "water"),
title = "Landcover type") +
  tm_layout(legend.position = c("left", "bottom"),
            main.title = "Santa Barbara Landcover")
```
